version: '3'

networks:
  daily-network:
    driver: bridge

services:
  nginx-server:
    container_name: nginx-server
    restart: always
    build:
      dockerfile: dev.Dockerfile
      context: nginx
    volumes:
      - ./nginx/logs:/var/log/nginx
    ports:
      - '80:80'
    networks:
      - daily-network

  react-front:
    container_name: react-front
    ports: 
      - '3000:3000'
    networks:
      - daily-network
    build:
      dockerfile: dev.Dockerfile
      context: front
    env_file:
       - .env
    volumes:
      - /usr/app/node_modules
      - ./front:/usr/app
    command: ["npm", "run", "start"]

  node-back:
    container_name: node-back
    ports: 
      - '4000:4000'
    networks:
      - daily-network
    build:
      context: back
      dockerfile: dev.Dockerfile
    env_file:
       - .env
    volumes:
      - /usr/app/node_modules
      - ./back:/usr/app
    command: ["npm", "run", "start"]

  mongo:
    container_name: mongo-db
    restart: unless-stopped
    ports:
      - '27017:27017'
    networks:
      - daily-network
    build:
      context: ./mongDb
      dockerfile: dev.Dockerfile
    #env_file:
       #- .env
    volumes:
      - mongo-data:/data/db

  postgres:
    container_name: postgres-db
    restart: unless-stopped
    ports: 
      - '5432:5432'
    networks:
      - daily-network
    build:
      context: ./postgresDb
      dockerfile: dev.Dockerfile
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - '8888:80'
    networks:
      - daily-network
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
   

volumes:
  mongo-data:
    #driver: local
  postgres-data:
    #driver: local
  pgadmin-data:
    #driver: local